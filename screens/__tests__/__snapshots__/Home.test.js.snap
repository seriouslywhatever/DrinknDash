// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": undefined,
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Image
          source={1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "height": undefined,
                "width": undefined,
              },
              undefined,
            ]
          }
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "left": "2%",
              "opacity": 1,
              "position": "absolute",
              "top": "5%",
            }
          }
        >
          <Image
            source={1}
            style={
              {
                "height": 30,
                "width": 30,
              }
            }
          />
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
              "position": "absolute",
              "right": "2%",
              "top": "5%",
            }
          }
        >
          <Text
            style={
              {
                "color": "black",
              }
            }
          >
            [missing "en.logoutText" translation]
          </Text>
        </View>
        <Text
          style={
            [
              {
                "fontSize": 32,
                "fontWeight": "500",
              },
              {
                "color": "black",
              },
            ]
          }
        >
          [missing "en.lobbiesText" translation]
        </Text>
        <Text
          style={
            {
              "color": "black",
            }
          }
        >
           
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "borderWidth": 2,
          "width": "100%",
        }
      }
    />
    <View
      style={
        {
          "flex": 6,
        }
      }
    >
      <RCTScrollView
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
    <View
      style={
        {
          "bottom": "5%",
          "position": "absolute",
          "right": "5%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": undefined,
            "borderRadius": 50,
            "borderWidth": 1,
            "opacity": 0.8,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 16,
                "textAlign": "center",
              },
              {
                "color": "black",
              },
            ]
          }
        >
          [missing "en.createLobbyText" translation]
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
